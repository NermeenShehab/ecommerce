<?php
 namespace MailPoetVendor\Doctrine\ORM\Cache\Persister\Collection; if (!defined('ABSPATH')) exit; use MailPoetVendor\Doctrine\Common\Collections\Collection; use MailPoetVendor\Doctrine\ORM\Cache\CollectionCacheKey; use MailPoetVendor\Doctrine\ORM\Cache\Persister\CachedPersister; use MailPoetVendor\Doctrine\ORM\Mapping\ClassMetadata; use MailPoetVendor\Doctrine\ORM\PersistentCollection; use MailPoetVendor\Doctrine\ORM\Persisters\Collection\CollectionPersister; interface CachedCollectionPersister extends \MailPoetVendor\Doctrine\ORM\Cache\Persister\CachedPersister, \MailPoetVendor\Doctrine\ORM\Persisters\Collection\CollectionPersister { public function getSourceEntityMetadata(); public function getTargetEntityMetadata(); public function loadCollectionCache(\MailPoetVendor\Doctrine\ORM\PersistentCollection $collection, \MailPoetVendor\Doctrine\ORM\Cache\CollectionCacheKey $key); public function storeCollectionCache(\MailPoetVendor\Doctrine\ORM\Cache\CollectionCacheKey $key, $elements); } 