<?php
 namespace MailPoetVendor\Doctrine\DBAL\Types; if (!defined('ABSPATH')) exit; use MailPoetVendor\Doctrine\DBAL\ParameterType; use MailPoetVendor\Doctrine\DBAL\Platforms\AbstractPlatform; use function assert; use function fopen; use function fseek; use function fwrite; use function is_resource; use function is_string; class BinaryType extends \MailPoetVendor\Doctrine\DBAL\Types\Type { public function getSQLDeclaration(array $column, \MailPoetVendor\Doctrine\DBAL\Platforms\AbstractPlatform $platform) { return $platform->getBinaryTypeDeclarationSQL($column); } public function convertToPHPValue($value, \MailPoetVendor\Doctrine\DBAL\Platforms\AbstractPlatform $platform) { if ($value === null) { return null; } if (\is_string($value)) { $fp = \fopen('php://temp', 'rb+'); \assert(\is_resource($fp)); \fwrite($fp, $value); \fseek($fp, 0); $value = $fp; } if (!\is_resource($value)) { throw \MailPoetVendor\Doctrine\DBAL\Types\ConversionException::conversionFailed($value, \MailPoetVendor\Doctrine\DBAL\Types\Types::BINARY); } return $value; } public function getName() { return \MailPoetVendor\Doctrine\DBAL\Types\Types::BINARY; } public function getBindingType() { return \MailPoetVendor\Doctrine\DBAL\ParameterType::BINARY; } } 